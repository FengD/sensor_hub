syntax = "proto2";

package crdc.airi;

import "color.proto";

message Point2i {
  optional uint32 x = 1;
  optional uint32 y = 2;
}

message Points2i {
  repeated Point2i points = 1;
}

message Lines2i {
  // every 2 points represent a line
  repeated Point2i points = 1;
}

message Ellipse {
  optional Point2i center = 1;
  optional uint32 a = 2;
  optional uint32 b = 3;
  optional float angle = 4; // in degree
}

message Circle {
  optional Point2i center = 1;
  optional uint32 radius = 2;
}

message Rectangle {
  optional Point2i left_top = 1;
  optional Point2i right_bottom = 2;
}

message Text2D {
  optional Point2i pos = 1;
  optional sint32 scale = 2;
  optional string text = 3;
}

message Cube2D {
  // assert: points.size() == 8

  //      0 ------- 1
  //     /|        /|
  //    / |       / |
  //   3 ------- 2  |
  //   |  |      |  |
  //   |  4 -----|- 5
  //   | /       | /
  //   |/        |/
  //   7 ------- 6

  repeated Point2i points = 1;
}

message Polygon2D {
  repeated Point2i points = 1;
}

message ImageMarker {
  optional crdc.airi.Color color = 1;

  // Points2i: point size
  // Lines2i: line thickness
  // Ellipse, Circle, Rectangle: line thickness, negative value for filled shape
  // Text2D: font thickness
  // Cube2D: line thickness
  // Polygon: line thickness
  optional sint32 size = 2 [default = 1];
  // save extra description for image_marker
  optional string desc = 3;

  oneof marker {
    Points2i points = 16;
    Lines2i lines = 17;
    Ellipse ellipse = 18;
    Circle circle = 19;
    Rectangle rect = 20;
    Text2D text = 21;
    Cube2D cube = 22;
    Polygon2D polygon = 23;
  }
}

message ImageMarkerList {
  optional uint64 utime = 1;
  optional string image_channel = 2;
  optional uint64 image_utime = 3;
  repeated ImageMarker markers = 4;
}
